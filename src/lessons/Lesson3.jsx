import React from 'react';
import { NavLink } from 'react-router-dom';

import Scheme from './scheme1.png'
import Scheme2 from './scheme2.png'

import './Lesson.scss'

const Lesson3 = () => {
    return (
        <div className="lesson">
            <h3>3. Принципы построения баз данных. Жизненный цикл баз данных</h3>
            <hr />
            <p>&nbsp;</p>
            <p>Классическая технология проектирования реляционных баз данных связана с <i>теорией нормализации</i>, основанной на анализе функциональных зависимостей между атрибутами отношений. Процесс нормализации имеет своей целью устранение избыточности данных. Нормализация позволяет существенно сократить объем хранимой информации и устранить аномалии в организации хранения данных. Степень нормализации данных может быть различной. Приведение модели к требуемому уровню нормальной формы является основой построения реляционной базы данных.</p>
            &nbsp;
            <p>Нормализация достигается путем проверки соответствия таблиц ряду условий, определенных в трех уровнях нормализации: первой, второй и третьей нормальных формах (существуют также и другие уровни).</p>
            &nbsp;
            <p><b><i>Первая нормальная форма</i> </b>требует, чтобы каждое поле таблицы БД было неделимым и не содержало повторяющихся групп.</p>
            <p>Неделимость поля означает, что содержащиеся в нем значения не должны делиться на более мелкие. Например, если в поле «Подразделение» содержится название факультета и кафедры, требование неделимости не соблюдается и необходимо выделить название факультета или кафедры в отдельное поле.</p>
            <p>Повторяющимися являются поля, содержащие одинаковые по смыслу значения. Например, если требуется получить статистику продаж четырех товаров по месяцам, можно создать поля для хранения данных о продаже по каждому товару. Однако что делать, если товаров не 4, а 104, и как быть, если количество товаров заранее не известно? Повторяющиеся группы следует устранить, сохранив в таблице единственное поле «Товар». В результате получим запись, содержащую информацию о статистике продаж по одному товару, но этот товар может быть любым.</p>
            &nbsp;
            <p><b><i>Вторая нормальная</i></b><i> <b>форма</b></i> требует, чтобы все поля таблицы зависели от первичного ключа, то есть, чтобы первичный ключ однозначно определял запись и не был избыточен. Если же в какой-либо таблице имеется зависимость каких-либо не ключевых полей от части первичного ключа, следует выделить их в отдельную таблицу, сделав первичным ключом новой таблицы ту часть первичного ключа, от которой зависят данные поля, и установить связь "один ко многим" от новой таблицы к старой.</p>
            &nbsp;
            <p><b><i>Третья нормальная</i></b><i> <b>форма</b></i> требует, чтобы в таблицах не имелось транзитивных зависимостей между не ключевыми полями, то есть чтобы значение любого поля, не входящего в первичный ключ, не зависело от значения другого поля, также не входящего в первичный ключ.</p>
            <p>Результатом нормализации является модель данных, которую легко поддерживать, не содержащая неопределенностей в данных и повторений данных.</p>
            &nbsp;
            <p>После формальных определений трех уровней нормализации разберем конкретный пример и опишем возможные проблемы. В качестве примера будет рассматриваться база данных, содержащая сведения о посещаемых студентами курсах.</p>
            <p>Таблицы базы данных до нормализации</p>
            &nbsp;
            <p>В этом примере предполагается, что:</p>
            <ul type="disc">
                <li>• студент может записаться на любое число курсов;</li>
            </ul>
            <ul type="disc">
                <li>• лекторы могут вести несколько курсов;</li>
            </ul>
            <ul type="disc">
                <li>• каждый лектор всегда проводит занятия в одной и той же аудитории;</li>
            </ul>
            <ul type="disc">
                <li>• в каждой аудитории читается только один курс.</li>
            </ul>
            &nbsp;
            <p>Пусть для хранения этих сведений используются следующие Таблицы.</p>
            &nbsp;
            <p align="center">Таблица 6. Students (студенты)</p>
            <table border="1" width="646" cellspacing="1" cellpadding="3" align="center">
                <tbody>
                <tr>
                <td valign="top" width="215">
                <p>Name (имя)</p>
                </td>
                <td valign="top" width="94">
                <p>Phoneno (телефон)</p>
                </td>
                <td valign="top" width="336">
                <p>CourseRegistrations (посещаемые курсы)</p>
                </td>
                </tr>
                <tr>
                <td valign="top" width="215">
                <p>Maijorie Green</p>
                </td>
                <td valign="top" width="94">
                <p>415986</p>
                </td>
                <td valign="top" width="336">
                <p>Basic Computing, Database Administration</p>
                </td>
                </tr>
                <tr>
                <td valign="top" width="215">
                <p>Bun Gringelsby</p>
                </td>
                <td valign="top" width="94">
                <p>707938</p>
                </td>
                <td valign="top" width="336">
                <p>Database Administration, Advanced Hardware Support</p>
                </td>
                </tr>
                <tr>
                <td valign="top" width="215">
                <p>Anico Yokamoto</p>
                </td>
                <td valign="top" width="94">
                <p>415935</p>
                </td>
                <td valign="top" width="336">
                <p>Advanced Hardware Support</p>
                </td>
                </tr>
                </tbody>
            </table>
            &nbsp;
            <p align="center">Таблица 7. Courses (курсы)</p>
            <table border="1" cellspacing="1" cellpadding="3" align="center">
                <tbody>
                <tr>
                <td valign="top" width="209">
                <p>Course (курс)</p>
                </td>
                <td valign="top" width="210">
                <p>Lecturer (лектор)</p>
                </td>
                <td valign="top" width="210">
                <p>Room (аудитория)</p>
                </td>
                </tr>
                <tr>
                <td valign="top" width="209">
                <p>Basic Computing</p>
                </td>
                <td valign="top" width="210">
                <p>Meander Smith</p>
                </td>
                <td valign="top" width="210">
                <p>542 South</p>
                </td>
                </tr>
                <tr>
                <td valign="top" width="209">
                <p>Database Administration</p>
                </td>
                <td valign="top" width="210">
                <p>Dean Straight</p>
                </td>
                <td valign="top" width="210">
                <p>221 East</p>
                </td>
                </tr>
                <tr>
                <td valign="top" width="209">
                <p>Advanced Hardware Support</p>
                </td>
                <td valign="top" width="210">
                <p>Dean Straight</p>
                </td>
                <td valign="top" width="210">
                <p>221 East</p>
                </td>
                </tr>
                </tbody>
            </table>
            &nbsp;
            <p>В этом случае появляются следующие логические противоречия:</p>
            <ul>
                <li>• если курсBasic Computing будет закрыт, из таблицы будет удален лектор Meander Smith и аудитория 542 South;</li>
                <li>• число курсов, на которые может записаться студент, ограничено длиной записи которую допускает поле <i>Course</i> <i>Registrations</i><i>;</i></li>
                <li>• трудно выполнять поиск значений в поле <i>Course</i> <i>Registrations</i><i>, а</i> также использовать его в вычислениях;</li>
                <li>• в каждой регистрационной записи повторяется полное название курса. В результате неэффективно используется пространство и растет вероятность появления несогласованных данных, если название курса введено с ошибками. Кроме того, при изменении названия курса потребуется проводить поиск и обновление всех регистрационных записей;</li>
                <li>• таблицу <i>Students</i> невозможно индексировать по фамилии, так как в поле <i>name</i> хранятся полные имена студентов;</li>
                <li>• если лектор сменит аудиторию, придется обновить сведения обо всех преподаваемых им курсах.</li>
            </ul>
            &nbsp;
            <p>Проведем нормализацию</p>
            &nbsp;
            <p align="center">Таблица 8. Students (студенты)</p>
            <table border="1" cellspacing="1" cellpadding="3" align="center">
                <tbody>
                <tr>
                <td valign="top" width="177">
                <p>StudentsID(код студента)</p>
                </td>
                <td valign="top" width="137">
                <p>Firstname (имя)</p>
                </td>
                <td valign="top" width="157">
                <p>Lastname (фамилия)</p>
                </td>
                <td valign="top" width="157">
                <p>Phoneno (телефон)</p>
                </td>
                </tr>
                <tr>
                <td valign="top" width="177">
                <p>1001</p>
                </td>
                <td valign="top" width="137">
                <p>Maijorie</p>
                </td>
                <td valign="top" width="157">
                <p>Green</p>
                </td>
                <td valign="top" width="157">
                <p>415986</p>
                </td>
                </tr>
                <tr>
                <td valign="top" width="177">
                <p>1002</p>
                </td>
                <td valign="top" width="137">
                <p>Bun</p>
                </td>
                <td valign="top" width="157">
                <p>Gringelsby</p>
                </td>
                <td valign="top" width="157">
                <p>707938</p>
                </td>
                </tr>
                <tr>
                <td valign="top" width="177">
                <p>1003</p>
                </td>
                <td valign="top" width="137">
                <p>Anico</p>
                </td>
                <td valign="top" width="157">
                <p>Yokamoto</p>
                </td>
                <td valign="top" width="157">
                <p>415935</p>
                </td>
                </tr>
                </tbody>
            </table>
            &nbsp;
            <p align="center">Таблица 9. Регистрационные записи (Registrations)</p>
            <table border="1" cellspacing="1" cellpadding="3" align="center">
                <tbody>
                <tr>
                <td valign="top" width="209">
                <p>RegID (код записи)</p>
                </td>
                <td valign="top" width="210">
                <p>StudentsID(код студента</p>
                </td>
                <td valign="top" width="210">
                <p>Courses (курсы)</p>
                </td>
                </tr>
                <tr>
                <td valign="top" width="209">
                <p>1</p>
                </td>
                <td valign="top" width="210">
                <p>1001</p>
                </td>
                <td valign="top" width="210">
                <p>1</p>
                </td>
                </tr>
                <tr>
                <td valign="top" width="209">
                <p>2</p>
                </td>
                <td valign="top" width="210">
                <p>1002</p>
                </td>
                <td valign="top" width="210">
                <p>2</p>
                </td>
                </tr>
                <tr>
                <td valign="top" width="209">
                <p>3</p>
                </td>
                <td valign="top" width="210">
                <p>1003</p>
                </td>
                <td valign="top" width="210">
                <p>3</p>
                </td>
                </tr>
                <tr>
                <td valign="top" width="209">
                <p>4</p>
                </td>
                <td valign="top" width="210">
                <p>1004</p>
                </td>
                <td valign="top" width="210">
                <p>4</p>
                </td>
                </tr>
                <tr>
                <td valign="top" width="209">
                <p>5</p>
                </td>
                <td valign="top" width="210">
                <p>1005</p>
                </td>
                <td valign="top" width="210">
                <p>5</p>
                </td>
                </tr>
                </tbody>
            </table>
            &nbsp;
            <p align="center">Таблица 10. Courses (курсы)</p>
            <table border="1" width="629" cellspacing="1" cellpadding="3" align="center">
                <tbody>
                <tr>
                <td valign="top" width="209">
                <p>Course ID(курс)</p>
                </td>
                <td valign="top" width="210">
                <p>Course (курс)</p>
                </td>
                <td valign="top" width="210">
                <p>LecturerID (код лектора)</p>
                </td>
                </tr>
                <tr>
                <td valign="top" width="209">
                <p>1</p>
                </td>
                <td valign="top" width="210">
                <p>Basic Computing</p>
                </td>
                <td valign="top" width="210">
                <p>1</p>
                </td>
                </tr>
                <tr>
                <td valign="top" width="209">
                <p>2</p>
                </td>
                <td valign="top" width="210">
                <p>Database Administration</p>
                </td>
                <td valign="top" width="210">
                <p>2</p>
                </td>
                </tr>
                <tr>
                <td valign="top" width="209">
                <p>3</p>
                </td>
                <td valign="top" width="210">
                <p>Advanced Hardware Support</p>
                </td>
                <td valign="top" width="210">
                <p>3</p>
                </td>
                </tr>
                </tbody>
            </table>
            &nbsp;
            <p align="center">Таблица 11. Lecturers (лектор)</p>
            <table border="1" width="621" cellspacing="1" cellpadding="3" align="center">
                <tbody>
                <tr>
                <td valign="top" width="168">
                <p>LecturerID (код лектора)</p>
                </td>
                <td valign="top" width="137">
                <p>Firstname (имя)</p>
                </td>
                <td valign="top" width="166">
                <p>Lastname (фамилия)</p>
                </td>
                <td valign="top" width="151">
                <p>Room (аудитория)</p>
                </td>
                </tr>
                <tr>
                <td valign="top" width="168">
                <p>1</p>
                </td>
                <td valign="top" width="137">
                <p>Meander</p>
                </td>
                <td valign="top" width="166">
                <p>Smith</p>
                </td>
                <td valign="top" width="151">
                <p>542 South</p>
                </td>
                </tr>
                <tr>
                <td valign="top" width="168">
                <p>2</p>
                </td>
                <td valign="top" width="137">
                <p>Dean</p>
                </td>
                <td valign="top" width="166">
                <p>Straight</p>
                </td>
                <td valign="top" width="151">
                <p>221 East</p>
                </td>
                </tr>
                </tbody>
            </table>
            &nbsp;
            <p>Между таблицами существуют следующие связи:</p>
            &nbsp;
            <p><i>Students</i> (студенты) — <i>Courses</i> (курсы): отношение «многие ко многим» через промежуточную таблицу <i>Registrations</i> (регистрационные записи), другими словами это отношение сведено к двум отношениям «один<b> ко </b>многим»;</p>
            &nbsp;
            <p><i>Students</i> (студенты) — <i>Registrations</i> (регистрационные записи): отношения «один<b> ко </b>многим»;</p>
            &nbsp;
            <p><i>Courses</i> (курсы) — <i>Registrations</i> (регистрационные записи): отношение «один<b> ко </b>многим»;</p>
            &nbsp;
            <p><i>Lecturers</i> (лекторы) — <i>Courses</i> (курсы): отношение «один ко многим».</p>
            &nbsp;
            <p>Очевидные преимущества нормализации этих таблиц:</p>
            <ul>
                <li>• каждая таблица содержит только один набор связанных данных. Например, в таблице <i>Students</i> теперь нет сведений о посещаемых курсах;</li>
                <li>• в каждой таблице имеется первичный ключ: в таблице <i>Students</i><i> —</i> это поле <i>StudentID</i><i>, </i>в таблице <i>Registrations</i><i> — </i><i>RegID</i><i>,</i> в таблице <i>Courses</i><i> — </i><i>CourseID</i> и в таблице <i>Lecturers</i><i> — </i><i>LecturerW</i><i>,</i></li>
                <li>• отсутствуют составные поля. Каждое поле описывает только один атрибут. <i>Например,</i> поле, содержавшее имя и фамилию студента, разбито на отдельные поля, которые содержат имя и фамилию студента;</li>
                <li>• отсутствуют повторяющиеся данные. Так, теперь имена лекторов записываются только один раз;</li>
                <li>• отсутствуют поля, содержащие несколько значений. Например, каждая регистрационная запись курса теперь расположена в отдельной строке таблицы <i>Registrations</i><i>. </i>Для сравнения взгляните на поле <i>Course</i> <i>Registrations</i> (посещаемые курсы) предыдущего варианта таблицы <i>Students</i><i>;</i></li>
                <li>• каждое поле полностью зависит от первичного ключа. Например, в таблице <i>Courses</i> нет поля <i>Room</i><i>.</i> Это связано с тем, что аудитория зависит не от кода курса <i>(CourseID), </i>а от кода лектора <i>(</i><i>LecturerID</i><i>). </i></li>
            </ul>
            &nbsp;
            <p>Вот основные преимущества нормализации:</p>
            <ul>
                <li>• облегчается сортировка и создание индекса, поскольку таблицы стали более компактными;</li>
                <li>• индексы становятся более компактными;</li>
                <li>• меньшее число индексов в одной таблице позволяет быстрее выполнять обновления записей;</li>
                <li>• в таблицах содержится меньше значений NULL и избыточных данных, что повышает компактность базы данных;</li>
                <li>• уменьшается вероятность конфликтов блокировок таблиц<b>,</b> поскольку блокировать приходится ограниченные наборы данных.</li>
            </ul>
            &nbsp;
            <p>Проект реляционной базы данных - это набор взаимосвязанных отношений, для которых определены все атрибуты, заданы первичные ключи отношений и заданы еще некоторые дополнительные свойства отношений, которые относятся к принципам поддержки целостности. Фактически проект базы данных - это фундамент будущего программного комплекса, который будет использоваться достаточно долго и многими пользователями. Этапы жизненного цикла базы данных (см рис 1) аналогичны, в основном, развитию любой программной системы, однако в них есть определенная специфика, касающаяся только баз данных.</p>
            <div className="scheme"><img src={Scheme} alt="scheme1" title="Рис. 1. Этапы жизненного цикла БД"/></div>
            <p>Процесс проектирования БД представляет собой последовательность переходов от неформального словесного описания информационной структуры предметной области к формализованному описанию объектов предметной области в терминах некоторой модели. <p>&nbsp;</p> Можно выделить следующие <i>этапы проектирования</i><b>:</b></p>
            <ol>
                <li>Системный анализ и словесное описание информационных объектов предметной области.</li>
                <li>Проектирование инфологической модели предметной области - частично формализованное описание объектов предметной области в терминах некоторой семантической модели, например, в терминах ЕR-модели.</li>
                <li>Даталогическое или логическое проектирование БД, то есть описание БД в терминах принятой дата логической модели данных.</li>
                <li>Физическое проектирование БД, то есть выбор эффективного размещения БД на внешних носителях для обеспечения наиболее эффективной работы приложения.</li>
            </ol>
            &nbsp;
            <p>Если учесть, что между вторым и третьим этапами необходимо принять решение, с использованием какой стандартной СУБД будет реализовываться наш проект, то условно процесс проектирования БД можно представить последовательностью выполнения пяти соответствующих этапов (см. рис. 2.)</p>
            <div className="scheme"><img src={Scheme2} alt="scheme2" title="Рис. 2. Этапы проектирования БД"/></div>
            <p>&nbsp;</p>
            <hr />
            <div className="lesson-nav">

                <NavLink to="/lesson2">
                    <a href="/lesson2" className="waves-effect waves-light btn-large nav-bottom">&larr; Предыдущий урок</a>
                </NavLink>
                
                <NavLink to="/lesson4">
                    <a href="/lesson4" className="waves-effect waves-light btn-large nav-bottom">Следующий урок &rarr;</a>
                </NavLink>
            </div>
        </div>
    );
}

export default Lesson3;

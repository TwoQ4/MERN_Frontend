import React from 'react';
import {NavLink} from 'react-router-dom';

import './Lesson.scss';

const Lesson4 = () => {
    return (
        <div className="lesson">
            <h3>4. Архитектура баз данных</h3>
            <hr />
            <p>&nbsp;</p>
            <p>По технологии обработки данных базы данных подразделяются на <em>централизованные</em> и <em>распределенные</em>. <strong><em>Централизованная база данных</em></strong> хранится в памяти одной вычислительной системы. Если эта вычислительная система является компонентом сети ЭВМ, возможен распределенный доступ к такой базе данных – доступ к ней пользователей различных ЭВМ данной сети. Такой способ использования баз данных часто применяют в локальных сетях персональных ЭВМ.</p>
            <p>&nbsp;</p>
            <p>Появление сетей ЭВМ позволило наряду с централизованными создавать и распределенные базы данных. <strong><em>Распределенная база данных</em></strong> состоит из нескольких, возможно, пересекающихся или даже дублирующих друг друга частей, хранимых в различных ЭВМ вычислительной сети. Однако пользователь распределенной базы данных не обязан знать, каким образом ее компоненты размещены в узлах сети, и представляет себе эту базу данных как единое целое. Работа с такой базой данных осуществляется с помощью <em>системы управления распределенной базой данных</em> (СУРБД). Данные, содержащиеся в распределенной базе данных, их представление на всех уровнях архитектуры СУРБД и размещение в сети описываются в <em>системном справочнике,</em> который сам может быть декомпозирован и размещен в различных узлах сети.</p>
            <p>&nbsp;</p>
            <p>Части распределенной базы данных, размещенные на отдельных ЭВМ сети, управляются собственными (локальными) СУБД и могут использоваться одновременно как самостоятельные локальные базы данных. Локальные СУБД не обязательно должны быть одинаковыми в разных узлах сети. Объединение неоднородных локальных баз данных в единую распределенную базу данных является сложной научно-технической проблемой. Ее решение потребовало проведения большого комплекса научных исследований и экспериментальных разработок.</p>
            <p>&nbsp;</p>
            <p>По способу доступа к данным базы данных разделяются на <em>базы данных с локальным доступом </em>и <em>базы данных с удаленным (сетевым) доступом</em>.</p>
            <p>&nbsp;</p>
            <p>Системы централизованных баз данных с сетевым доступом предполагают различные архитектуры подобных систем:</p>
            <ul>
                <li>• файл-сервер;</li>
                <li>• клиент-сервер.</li>
            </ul>
            <p>&nbsp;</p>
            <p><strong><em>Файл-сервер</em>. &nbsp;</strong>Данная архитектура систем БД предполагает выделение одной из машин сети в качестве центральной (сервер файлов). На такой машине хранится совместно используемая централизованная БД. Все другие машины сети выполняют функции рабочих станций, с помощью которых поддерживается доступ пользовательской системы к централизованной базе данных. Каждый пользователь может запускать приложение, расположенное на сервере, при этом на компьютере пользователя запускается копия приложения. Файлы базы данных в соответствии с пользовательскими запросами передаются на рабочие станции, где в основном производится обработка. Когда пользователь сети работает с БД, на его компьютере появляется локальная копия общей БД. Эта копия периодически обновляется данными, содержащимися в БД, расположенной на сервере. Архитектура файл-сервер обычно используется в таких сетях, где имеется немного компьютеров. Для ее реализации предназначены персональные СУБД, например Paradox и DBase. При большой интенсивности доступа к одним и тем же данным производительность информационной системы падает.</p>
            <p>&nbsp;</p>
            <p><strong><em>Клиент-сервер</em>. &nbsp;</strong> В этой концепции подразумевается, что помимо хранения централизованной БД сервер базы данных должен обеспечивать выполнение основного объема обработки данных. Технология клиент-сервер разделяет приложение на две части: клиентскую и серверную. Клиентская обеспечивает интерактивный интерфейс, сервер обеспечивает управление данными, разделение информации, администрирование и безопасность. Для получения данных приложение-клиент формирует и отсылает запрос удаленному серверу, на котором размещена БД. Запрос формируется на языке SQL, который является стандартом доступа к серверу при использовании реляционных баз данных. После получения запроса удаленный сервер направляет его SQL-серверу (серверу баз данных). SQL-сервер – это программа, которая управляет удаленной БД и обеспечивает выполнение запроса и выдачу клиенту его результатов – требуемых данных. Вся обработка запроса выполняется на удаленном сервере. Для реализации архитектуры клиент-сервер обычно применяются многопользовательские СУБД, например Qracle, MS SQL Server, InterBase и др. Подобные СУБД называют промышленными, так как они позволяют организовать информационную систему, состоящую из большого числа пользователей.</p>
            <p>&nbsp;</p>
            <hr />
            <div className="lesson-nav">
                <NavLink to="/lesson3">
                        <a href="/lesson3" className="waves-effect waves-light btn-large nav-bottom">&larr; Предыдущий урок</a>
                </NavLink>
            </div>
            
        </div>
    );
}

export default Lesson4;
